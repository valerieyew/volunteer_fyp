stages:
  - Test
  - Release
  - Deploy

integration-tests:
  stage: Test
  image: docker/compose:latest
  services:
    - docker:dind
  before_script:
    - docker info
    - docker-compose --version
  script:
    - docker-compose -f ci/docker-compose.test.yml up --exit-code-from account-pytest

release-image:
  stage: Release
  image: docker:20.10.7
  services:
    - docker:dind
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - docker build --pull -t "$CI_REGISTRY_IMAGE/$CI_COMMIT_BRANCH:$CI_COMMIT_SHA" .
    - docker push "$CI_REGISTRY_IMAGE/$CI_COMMIT_BRANCH:$CI_COMMIT_SHA"

deploy-ecs:
  stage: Deploy
  image: 'registry.gitlab.com/gitlab-org/cloud-deploy/aws-ecs:latest'
  environment:
    name: production
  rules:
    - if: '$CI_COMMIT_REF_NAME == "master"'
  script:
    - ecs update-task-definition
    - aws ecs update-service --cluster team-vision-fargate-cluster --service accounts --task-definition accounts --force-new-deployment