{"ast":null,"code":"import { extends as _extends, objectWithoutPropertiesLoose as _objectWithoutPropertiesLoose } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport React, { useRef, useCallback, useMemo, createContext, useContext, useReducer, useEffect, Fragment } from 'react';\nimport { match } from '../../utils/match.esm.js';\nimport { render, Features } from '../../utils/render.esm.js';\nimport { useSyncRefs } from '../../hooks/use-sync-refs.esm.js';\nimport { Keys } from '../keyboard.esm.js';\nimport { useIsoMorphicEffect } from '../../hooks/use-iso-morphic-effect.esm.js';\nimport { useId } from '../../hooks/use-id.esm.js';\nimport { focusIn, Focus } from '../../utils/focus-management.esm.js';\nimport { useResolveButtonType } from '../../hooks/use-resolve-button-type.esm.js';\n\nvar _reducers;\n\nvar ActionTypes;\n\n(function (ActionTypes) {\n  ActionTypes[ActionTypes[\"SetSelectedIndex\"] = 0] = \"SetSelectedIndex\";\n  ActionTypes[ActionTypes[\"SetOrientation\"] = 1] = \"SetOrientation\";\n  ActionTypes[ActionTypes[\"SetActivation\"] = 2] = \"SetActivation\";\n  ActionTypes[ActionTypes[\"RegisterTab\"] = 3] = \"RegisterTab\";\n  ActionTypes[ActionTypes[\"UnregisterTab\"] = 4] = \"UnregisterTab\";\n  ActionTypes[ActionTypes[\"RegisterPanel\"] = 5] = \"RegisterPanel\";\n  ActionTypes[ActionTypes[\"UnregisterPanel\"] = 6] = \"UnregisterPanel\";\n  ActionTypes[ActionTypes[\"ForceRerender\"] = 7] = \"ForceRerender\";\n})(ActionTypes || (ActionTypes = {}));\n\nvar reducers = (_reducers = {}, _reducers[ActionTypes.SetSelectedIndex] = function (state, action) {\n  if (state.selectedIndex === action.index) return state;\n  return _extends({}, state, {\n    selectedIndex: action.index\n  });\n}, _reducers[ActionTypes.SetOrientation] = function (state, action) {\n  if (state.orientation === action.orientation) return state;\n  return _extends({}, state, {\n    orientation: action.orientation\n  });\n}, _reducers[ActionTypes.SetActivation] = function (state, action) {\n  if (state.activation === action.activation) return state;\n  return _extends({}, state, {\n    activation: action.activation\n  });\n}, _reducers[ActionTypes.RegisterTab] = function (state, action) {\n  if (state.tabs.includes(action.tab)) return state;\n  return _extends({}, state, {\n    tabs: [].concat(state.tabs, [action.tab])\n  });\n}, _reducers[ActionTypes.UnregisterTab] = function (state, action) {\n  return _extends({}, state, {\n    tabs: state.tabs.filter(function (tab) {\n      return tab !== action.tab;\n    })\n  });\n}, _reducers[ActionTypes.RegisterPanel] = function (state, action) {\n  if (state.panels.includes(action.panel)) return state;\n  return _extends({}, state, {\n    panels: [].concat(state.panels, [action.panel])\n  });\n}, _reducers[ActionTypes.UnregisterPanel] = function (state, action) {\n  return _extends({}, state, {\n    panels: state.panels.filter(function (panel) {\n      return panel !== action.panel;\n    })\n  });\n}, _reducers[ActionTypes.ForceRerender] = function (state) {\n  return _extends({}, state);\n}, _reducers);\nvar TabsContext = /*#__PURE__*/createContext(null);\nTabsContext.displayName = 'TabsContext';\n\nfunction useTabsContext(component) {\n  var context = useContext(TabsContext);\n\n  if (context === null) {\n    var err = new Error(\"<\" + component + \" /> is missing a parent <Tab.Group /> component.\");\n    if (Error.captureStackTrace) Error.captureStackTrace(err, useTabsContext);\n    throw err;\n  }\n\n  return context;\n}\n\nfunction stateReducer(state, action) {\n  return match(action.type, reducers, state, action);\n} // ---\n\n\nvar DEFAULT_TABS_TAG = Fragment;\n\nfunction Tabs(props) {\n  var _props$defaultIndex = props.defaultIndex,\n      defaultIndex = _props$defaultIndex === void 0 ? 0 : _props$defaultIndex,\n      _props$vertical = props.vertical,\n      vertical = _props$vertical === void 0 ? false : _props$vertical,\n      _props$manual = props.manual,\n      manual = _props$manual === void 0 ? false : _props$manual,\n      onChange = props.onChange,\n      _props$selectedIndex = props.selectedIndex,\n      selectedIndex = _props$selectedIndex === void 0 ? null : _props$selectedIndex,\n      passThroughProps = _objectWithoutPropertiesLoose(props, [\"defaultIndex\", \"vertical\", \"manual\", \"onChange\", \"selectedIndex\"]);\n\n  var orientation = vertical ? 'vertical' : 'horizontal';\n  var activation = manual ? 'manual' : 'auto';\n\n  var _useReducer = useReducer(stateReducer, {\n    selectedIndex: null,\n    tabs: [],\n    panels: [],\n    orientation: orientation,\n    activation: activation\n  }),\n      state = _useReducer[0],\n      dispatch = _useReducer[1];\n\n  var slot = useMemo(function () {\n    return {\n      selectedIndex: state.selectedIndex\n    };\n  }, [state.selectedIndex]);\n  var onChangeRef = useRef(function () {});\n  useEffect(function () {\n    dispatch({\n      type: ActionTypes.SetOrientation,\n      orientation: orientation\n    });\n  }, [orientation]);\n  useEffect(function () {\n    dispatch({\n      type: ActionTypes.SetActivation,\n      activation: activation\n    });\n  }, [activation]);\n  useEffect(function () {\n    if (typeof onChange === 'function') {\n      onChangeRef.current = onChange;\n    }\n  }, [onChange]);\n  useEffect(function () {\n    if (state.tabs.length <= 0) return;\n    if (selectedIndex === null && state.selectedIndex !== null) return;\n    var tabs = state.tabs.map(function (tab) {\n      return tab.current;\n    }).filter(Boolean);\n    var focusableTabs = tabs.filter(function (tab) {\n      return !tab.hasAttribute('disabled');\n    });\n    var indexToSet = selectedIndex != null ? selectedIndex : defaultIndex; // Underflow\n\n    if (indexToSet < 0) {\n      dispatch({\n        type: ActionTypes.SetSelectedIndex,\n        index: tabs.indexOf(focusableTabs[0])\n      });\n    } // Overflow\n    else if (indexToSet > state.tabs.length) {\n      dispatch({\n        type: ActionTypes.SetSelectedIndex,\n        index: tabs.indexOf(focusableTabs[focusableTabs.length - 1])\n      });\n    } // Middle\n    else {\n      var before = tabs.slice(0, indexToSet);\n      var after = tabs.slice(indexToSet);\n      var next = [].concat(after, before).find(function (tab) {\n        return focusableTabs.includes(tab);\n      });\n      if (!next) return;\n      dispatch({\n        type: ActionTypes.SetSelectedIndex,\n        index: tabs.indexOf(next)\n      });\n    }\n  }, [defaultIndex, selectedIndex, state.tabs, state.selectedIndex]);\n  var lastChangedIndex = useRef(state.selectedIndex);\n  var providerBag = useMemo(function () {\n    return [state, {\n      dispatch: dispatch,\n      change: function change(index) {\n        if (lastChangedIndex.current !== index) onChangeRef.current(index);\n        lastChangedIndex.current = index;\n        dispatch({\n          type: ActionTypes.SetSelectedIndex,\n          index: index\n        });\n      }\n    }];\n  }, [state, dispatch]);\n  return React.createElement(TabsContext.Provider, {\n    value: providerBag\n  }, render({\n    props: _extends({}, passThroughProps),\n    slot: slot,\n    defaultTag: DEFAULT_TABS_TAG,\n    name: 'Tabs'\n  }));\n} // ---\n\n\nvar DEFAULT_LIST_TAG = 'div';\n\nfunction List(props) {\n  var _useTabsContext = useTabsContext([Tab.name, List.name].join('.')),\n      _useTabsContext$ = _useTabsContext[0],\n      selectedIndex = _useTabsContext$.selectedIndex,\n      orientation = _useTabsContext$.orientation;\n\n  var slot = {\n    selectedIndex: selectedIndex\n  };\n  var propsWeControl = {\n    role: 'tablist',\n    'aria-orientation': orientation\n  };\n  var passThroughProps = props;\n  return render({\n    props: _extends({}, passThroughProps, propsWeControl),\n    slot: slot,\n    defaultTag: DEFAULT_LIST_TAG,\n    name: 'Tabs.List'\n  });\n} // ---\n\n\nvar DEFAULT_TAB_TAG = 'button';\n\nfunction Tab(props) {\n  var _panels$myIndex, _panels$myIndex$curre;\n\n  var id = \"headlessui-tabs-tab-\" + useId();\n\n  var _useTabsContext2 = useTabsContext(Tab.name),\n      _useTabsContext2$ = _useTabsContext2[0],\n      selectedIndex = _useTabsContext2$.selectedIndex,\n      tabs = _useTabsContext2$.tabs,\n      panels = _useTabsContext2$.panels,\n      orientation = _useTabsContext2$.orientation,\n      activation = _useTabsContext2$.activation,\n      _useTabsContext2$2 = _useTabsContext2[1],\n      dispatch = _useTabsContext2$2.dispatch,\n      change = _useTabsContext2$2.change;\n\n  var internalTabRef = useRef(null);\n  var tabRef = useSyncRefs(internalTabRef, function (element) {\n    if (!element) return;\n    dispatch({\n      type: ActionTypes.ForceRerender\n    });\n  });\n  useIsoMorphicEffect(function () {\n    dispatch({\n      type: ActionTypes.RegisterTab,\n      tab: internalTabRef\n    });\n    return function () {\n      return dispatch({\n        type: ActionTypes.UnregisterTab,\n        tab: internalTabRef\n      });\n    };\n  }, [dispatch, internalTabRef]);\n  var myIndex = tabs.indexOf(internalTabRef);\n  var selected = myIndex === selectedIndex;\n  var handleKeyDown = useCallback(function (event) {\n    var list = tabs.map(function (tab) {\n      return tab.current;\n    }).filter(Boolean);\n\n    if (event.key === Keys.Space || event.key === Keys.Enter) {\n      event.preventDefault();\n      event.stopPropagation();\n      change(myIndex);\n      return;\n    }\n\n    switch (event.key) {\n      case Keys.Home:\n      case Keys.PageUp:\n        event.preventDefault();\n        event.stopPropagation();\n        return focusIn(list, Focus.First);\n\n      case Keys.End:\n      case Keys.PageDown:\n        event.preventDefault();\n        event.stopPropagation();\n        return focusIn(list, Focus.Last);\n    }\n\n    return match(orientation, {\n      vertical: function vertical() {\n        if (event.key === Keys.ArrowUp) return focusIn(list, Focus.Previous | Focus.WrapAround);\n        if (event.key === Keys.ArrowDown) return focusIn(list, Focus.Next | Focus.WrapAround);\n        return;\n      },\n      horizontal: function horizontal() {\n        if (event.key === Keys.ArrowLeft) return focusIn(list, Focus.Previous | Focus.WrapAround);\n        if (event.key === Keys.ArrowRight) return focusIn(list, Focus.Next | Focus.WrapAround);\n        return;\n      }\n    });\n  }, [tabs, orientation, myIndex, change]);\n  var handleFocus = useCallback(function () {\n    var _internalTabRef$curre;\n\n    (_internalTabRef$curre = internalTabRef.current) == null ? void 0 : _internalTabRef$curre.focus();\n  }, [internalTabRef]);\n  var handleSelection = useCallback(function () {\n    var _internalTabRef$curre2;\n\n    (_internalTabRef$curre2 = internalTabRef.current) == null ? void 0 : _internalTabRef$curre2.focus();\n    change(myIndex);\n  }, [change, myIndex, internalTabRef]);\n  var slot = useMemo(function () {\n    return {\n      selected: selected\n    };\n  }, [selected]);\n  var propsWeControl = {\n    ref: tabRef,\n    onKeyDown: handleKeyDown,\n    onFocus: activation === 'manual' ? handleFocus : handleSelection,\n    onClick: handleSelection,\n    id: id,\n    role: 'tab',\n    type: useResolveButtonType(props, internalTabRef),\n    'aria-controls': (_panels$myIndex = panels[myIndex]) == null ? void 0 : (_panels$myIndex$curre = _panels$myIndex.current) == null ? void 0 : _panels$myIndex$curre.id,\n    'aria-selected': selected,\n    tabIndex: selected ? 0 : -1\n  };\n  var passThroughProps = props;\n  return render({\n    props: _extends({}, passThroughProps, propsWeControl),\n    slot: slot,\n    defaultTag: DEFAULT_TAB_TAG,\n    name: 'Tabs.Tab'\n  });\n} // ---\n\n\nvar DEFAULT_PANELS_TAG = 'div';\n\nfunction Panels(props) {\n  var _useTabsContext3 = useTabsContext([Tab.name, Panels.name].join('.')),\n      selectedIndex = _useTabsContext3[0].selectedIndex;\n\n  var slot = useMemo(function () {\n    return {\n      selectedIndex: selectedIndex\n    };\n  }, [selectedIndex]);\n  return render({\n    props: props,\n    slot: slot,\n    defaultTag: DEFAULT_PANELS_TAG,\n    name: 'Tabs.Panels'\n  });\n} // ---\n\n\nvar DEFAULT_PANEL_TAG = 'div';\nvar PanelRenderFeatures = Features.RenderStrategy | Features.Static;\n\nfunction Panel(props) {\n  var _tabs$myIndex, _tabs$myIndex$current;\n\n  var _useTabsContext4 = useTabsContext([Tab.name, Panel.name].join('.')),\n      _useTabsContext4$ = _useTabsContext4[0],\n      selectedIndex = _useTabsContext4$.selectedIndex,\n      tabs = _useTabsContext4$.tabs,\n      panels = _useTabsContext4$.panels,\n      dispatch = _useTabsContext4[1].dispatch;\n\n  var id = \"headlessui-tabs-panel-\" + useId();\n  var internalPanelRef = useRef(null);\n  var panelRef = useSyncRefs(internalPanelRef, function (element) {\n    if (!element) return;\n    dispatch({\n      type: ActionTypes.ForceRerender\n    });\n  });\n  useIsoMorphicEffect(function () {\n    dispatch({\n      type: ActionTypes.RegisterPanel,\n      panel: internalPanelRef\n    });\n    return function () {\n      return dispatch({\n        type: ActionTypes.UnregisterPanel,\n        panel: internalPanelRef\n      });\n    };\n  }, [dispatch, internalPanelRef]);\n  var myIndex = panels.indexOf(internalPanelRef);\n  var selected = myIndex === selectedIndex;\n  var slot = useMemo(function () {\n    return {\n      selected: selected\n    };\n  }, [selected]);\n  var propsWeControl = {\n    ref: panelRef,\n    id: id,\n    role: 'tabpanel',\n    'aria-labelledby': (_tabs$myIndex = tabs[myIndex]) == null ? void 0 : (_tabs$myIndex$current = _tabs$myIndex.current) == null ? void 0 : _tabs$myIndex$current.id,\n    tabIndex: selected ? 0 : -1\n  };\n  var passThroughProps = props;\n  return render({\n    props: _extends({}, passThroughProps, propsWeControl),\n    slot: slot,\n    defaultTag: DEFAULT_PANEL_TAG,\n    features: PanelRenderFeatures,\n    visible: selected,\n    name: 'Tabs.Panel'\n  });\n} // ---\n\n\nTab.Group = Tabs;\nTab.List = List;\nTab.Panels = Panels;\nTab.Panel = Panel;\nexport { Tab };","map":{"version":3,"sources":["C:\\Users\\pc\\Desktop\\Repos\\fyp_backend\\user-interfaces\\frontend\\node_modules\\@headlessui\\react\\src\\components\\tabs\\tabs.tsx"],"names":["ActionTypes","reducers","state","action","selectedIndex","index","orientation","activation","tabs","tab","panels","panel","TabsContext","createContext","context","useContext","err","Error","match","DEFAULT_TABS_TAG","defaultIndex","vertical","manual","onChange","passThroughProps","props","dispatch","useReducer","slot","useMemo","onChangeRef","useRef","useEffect","type","focusableTabs","indexToSet","before","after","next","lastChangedIndex","providerBag","change","value","render","defaultTag","name","DEFAULT_LIST_TAG","useTabsContext","Tab","List","propsWeControl","role","DEFAULT_TAB_TAG","id","useId","internalTabRef","tabRef","useSyncRefs","ForceRerender","useIsoMorphicEffect","myIndex","selected","handleKeyDown","useCallback","list","event","Keys","focusIn","Focus","horizontal","handleFocus","handleSelection","ref","onKeyDown","onFocus","onClick","useResolveButtonType","tabIndex","DEFAULT_PANELS_TAG","Panels","DEFAULT_PANEL_TAG","PanelRenderFeatures","Features","Panel","internalPanelRef","panelRef","features","visible"],"mappings":"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","sourcesContent":["import React, {\n  Fragment,\n  createContext,\n  useCallback,\n  useContext,\n  useMemo,\n  useReducer,\n  useRef,\n  useEffect,\n\n  // Types\n  ElementType,\n  MutableRefObject,\n  KeyboardEvent as ReactKeyboardEvent,\n  Dispatch,\n  ContextType,\n} from 'react'\n\nimport { Props } from '../../types'\nimport { render, Features, PropsForFeatures } from '../../utils/render'\nimport { useId } from '../../hooks/use-id'\nimport { match } from '../../utils/match'\nimport { Keys } from '../../components/keyboard'\nimport { focusIn, Focus } from '../../utils/focus-management'\nimport { useIsoMorphicEffect } from '../../hooks/use-iso-morphic-effect'\nimport { useSyncRefs } from '../../hooks/use-sync-refs'\nimport { useResolveButtonType } from '../../hooks/use-resolve-button-type'\n\ninterface StateDefinition {\n  selectedIndex: number | null\n\n  orientation: 'horizontal' | 'vertical'\n  activation: 'auto' | 'manual'\n\n  tabs: MutableRefObject<HTMLElement | null>[]\n  panels: MutableRefObject<HTMLElement | null>[]\n}\n\nenum ActionTypes {\n  SetSelectedIndex,\n  SetOrientation,\n  SetActivation,\n\n  RegisterTab,\n  UnregisterTab,\n\n  RegisterPanel,\n  UnregisterPanel,\n\n  ForceRerender,\n}\n\ntype Actions =\n  | { type: ActionTypes.SetSelectedIndex; index: number }\n  | { type: ActionTypes.SetOrientation; orientation: StateDefinition['orientation'] }\n  | { type: ActionTypes.SetActivation; activation: StateDefinition['activation'] }\n  | { type: ActionTypes.RegisterTab; tab: MutableRefObject<HTMLElement | null> }\n  | { type: ActionTypes.UnregisterTab; tab: MutableRefObject<HTMLElement | null> }\n  | { type: ActionTypes.RegisterPanel; panel: MutableRefObject<HTMLElement | null> }\n  | { type: ActionTypes.UnregisterPanel; panel: MutableRefObject<HTMLElement | null> }\n  | { type: ActionTypes.ForceRerender }\n\nlet reducers: {\n  [P in ActionTypes]: (\n    state: StateDefinition,\n    action: Extract<Actions, { type: P }>\n  ) => StateDefinition\n} = {\n  [ActionTypes.SetSelectedIndex](state, action) {\n    if (state.selectedIndex === action.index) return state\n    return { ...state, selectedIndex: action.index }\n  },\n  [ActionTypes.SetOrientation](state, action) {\n    if (state.orientation === action.orientation) return state\n    return { ...state, orientation: action.orientation }\n  },\n  [ActionTypes.SetActivation](state, action) {\n    if (state.activation === action.activation) return state\n    return { ...state, activation: action.activation }\n  },\n  [ActionTypes.RegisterTab](state, action) {\n    if (state.tabs.includes(action.tab)) return state\n    return { ...state, tabs: [...state.tabs, action.tab] }\n  },\n  [ActionTypes.UnregisterTab](state, action) {\n    return { ...state, tabs: state.tabs.filter(tab => tab !== action.tab) }\n  },\n  [ActionTypes.RegisterPanel](state, action) {\n    if (state.panels.includes(action.panel)) return state\n    return { ...state, panels: [...state.panels, action.panel] }\n  },\n  [ActionTypes.UnregisterPanel](state, action) {\n    return { ...state, panels: state.panels.filter(panel => panel !== action.panel) }\n  },\n  [ActionTypes.ForceRerender](state) {\n    return { ...state }\n  },\n}\n\nlet TabsContext = createContext<\n  [StateDefinition, { change(index: number): void; dispatch: Dispatch<Actions> }] | null\n>(null)\nTabsContext.displayName = 'TabsContext'\n\nfunction useTabsContext(component: string) {\n  let context = useContext(TabsContext)\n  if (context === null) {\n    let err = new Error(`<${component} /> is missing a parent <Tab.Group /> component.`)\n    if (Error.captureStackTrace) Error.captureStackTrace(err, useTabsContext)\n    throw err\n  }\n  return context\n}\n\nfunction stateReducer(state: StateDefinition, action: Actions) {\n  return match(action.type, reducers, state, action)\n}\n\n// ---\n\nlet DEFAULT_TABS_TAG = Fragment\ninterface TabsRenderPropArg {\n  selectedIndex: number\n}\n\nfunction Tabs<TTag extends ElementType = typeof DEFAULT_TABS_TAG>(\n  props: Props<TTag, TabsRenderPropArg> & {\n    defaultIndex?: number\n    onChange?: (index: number) => void\n    selectedIndex?: number\n    vertical?: boolean\n    manual?: boolean\n  }\n) {\n  let {\n    defaultIndex = 0,\n    vertical = false,\n    manual = false,\n    onChange,\n    selectedIndex = null,\n    ...passThroughProps\n  } = props\n  const orientation = vertical ? 'vertical' : 'horizontal'\n  const activation = manual ? 'manual' : 'auto'\n\n  let [state, dispatch] = useReducer(stateReducer, {\n    selectedIndex: null,\n    tabs: [],\n    panels: [],\n    orientation,\n    activation,\n  } as StateDefinition)\n  let slot = useMemo(() => ({ selectedIndex: state.selectedIndex }), [state.selectedIndex])\n  let onChangeRef = useRef<(index: number) => void>(() => {})\n\n  useEffect(() => {\n    dispatch({ type: ActionTypes.SetOrientation, orientation })\n  }, [orientation])\n\n  useEffect(() => {\n    dispatch({ type: ActionTypes.SetActivation, activation })\n  }, [activation])\n\n  useEffect(() => {\n    if (typeof onChange === 'function') {\n      onChangeRef.current = onChange\n    }\n  }, [onChange])\n\n  useEffect(() => {\n    if (state.tabs.length <= 0) return\n    if (selectedIndex === null && state.selectedIndex !== null) return\n\n    let tabs = state.tabs.map(tab => tab.current).filter(Boolean) as HTMLElement[]\n    let focusableTabs = tabs.filter(tab => !tab.hasAttribute('disabled'))\n\n    let indexToSet = selectedIndex ?? defaultIndex\n\n    // Underflow\n    if (indexToSet < 0) {\n      dispatch({ type: ActionTypes.SetSelectedIndex, index: tabs.indexOf(focusableTabs[0]) })\n    }\n\n    // Overflow\n    else if (indexToSet > state.tabs.length) {\n      dispatch({\n        type: ActionTypes.SetSelectedIndex,\n        index: tabs.indexOf(focusableTabs[focusableTabs.length - 1]),\n      })\n    }\n\n    // Middle\n    else {\n      let before = tabs.slice(0, indexToSet)\n      let after = tabs.slice(indexToSet)\n\n      let next = [...after, ...before].find(tab => focusableTabs.includes(tab))\n      if (!next) return\n\n      dispatch({ type: ActionTypes.SetSelectedIndex, index: tabs.indexOf(next) })\n    }\n  }, [defaultIndex, selectedIndex, state.tabs, state.selectedIndex])\n\n  let lastChangedIndex = useRef(state.selectedIndex)\n  let providerBag = useMemo<ContextType<typeof TabsContext>>(\n    () => [\n      state,\n      {\n        dispatch,\n        change(index: number) {\n          if (lastChangedIndex.current !== index) onChangeRef.current(index)\n          lastChangedIndex.current = index\n\n          dispatch({ type: ActionTypes.SetSelectedIndex, index })\n        },\n      },\n    ],\n    [state, dispatch]\n  )\n\n  return (\n    <TabsContext.Provider value={providerBag}>\n      {render({\n        props: { ...passThroughProps },\n        slot,\n        defaultTag: DEFAULT_TABS_TAG,\n        name: 'Tabs',\n      })}\n    </TabsContext.Provider>\n  )\n}\n\n// ---\n\nlet DEFAULT_LIST_TAG = 'div' as const\ninterface ListRenderPropArg {\n  selectedIndex: number\n}\ntype ListPropsWeControl = 'role' | 'aria-orientation'\n\nfunction List<TTag extends ElementType = typeof DEFAULT_LIST_TAG>(\n  props: Props<TTag, ListRenderPropArg, ListPropsWeControl> & {}\n) {\n  let [{ selectedIndex, orientation }] = useTabsContext([Tab.name, List.name].join('.'))\n\n  let slot = { selectedIndex }\n  let propsWeControl = {\n    role: 'tablist',\n    'aria-orientation': orientation,\n  }\n  let passThroughProps = props\n\n  return render({\n    props: { ...passThroughProps, ...propsWeControl },\n    slot,\n    defaultTag: DEFAULT_LIST_TAG,\n    name: 'Tabs.List',\n  })\n}\n\n// ---\n\nlet DEFAULT_TAB_TAG = 'button' as const\ninterface TabRenderPropArg {\n  selected: boolean\n}\ntype TabPropsWeControl = 'id' | 'role' | 'type' | 'aria-controls' | 'aria-selected' | 'tabIndex'\n\nexport function Tab<TTag extends ElementType = typeof DEFAULT_TAB_TAG>(\n  props: Props<TTag, TabRenderPropArg, TabPropsWeControl>\n) {\n  let id = `headlessui-tabs-tab-${useId()}`\n\n  let [\n    { selectedIndex, tabs, panels, orientation, activation },\n    { dispatch, change },\n  ] = useTabsContext(Tab.name)\n\n  let internalTabRef = useRef<HTMLElement>(null)\n  let tabRef = useSyncRefs(internalTabRef, element => {\n    if (!element) return\n    dispatch({ type: ActionTypes.ForceRerender })\n  })\n\n  useIsoMorphicEffect(() => {\n    dispatch({ type: ActionTypes.RegisterTab, tab: internalTabRef })\n    return () => dispatch({ type: ActionTypes.UnregisterTab, tab: internalTabRef })\n  }, [dispatch, internalTabRef])\n\n  let myIndex = tabs.indexOf(internalTabRef)\n  let selected = myIndex === selectedIndex\n\n  let handleKeyDown = useCallback(\n    (event: ReactKeyboardEvent<HTMLElement>) => {\n      let list = tabs.map(tab => tab.current).filter(Boolean) as HTMLElement[]\n\n      if (event.key === Keys.Space || event.key === Keys.Enter) {\n        event.preventDefault()\n        event.stopPropagation()\n\n        change(myIndex)\n        return\n      }\n\n      switch (event.key) {\n        case Keys.Home:\n        case Keys.PageUp:\n          event.preventDefault()\n          event.stopPropagation()\n\n          return focusIn(list, Focus.First)\n\n        case Keys.End:\n        case Keys.PageDown:\n          event.preventDefault()\n          event.stopPropagation()\n\n          return focusIn(list, Focus.Last)\n      }\n\n      return match(orientation, {\n        vertical() {\n          if (event.key === Keys.ArrowUp) return focusIn(list, Focus.Previous | Focus.WrapAround)\n          if (event.key === Keys.ArrowDown) return focusIn(list, Focus.Next | Focus.WrapAround)\n          return\n        },\n        horizontal() {\n          if (event.key === Keys.ArrowLeft) return focusIn(list, Focus.Previous | Focus.WrapAround)\n          if (event.key === Keys.ArrowRight) return focusIn(list, Focus.Next | Focus.WrapAround)\n          return\n        },\n      })\n    },\n    [tabs, orientation, myIndex, change]\n  )\n\n  let handleFocus = useCallback(() => {\n    internalTabRef.current?.focus()\n  }, [internalTabRef])\n\n  let handleSelection = useCallback(() => {\n    internalTabRef.current?.focus()\n    change(myIndex)\n  }, [change, myIndex, internalTabRef])\n\n  let slot = useMemo(() => ({ selected }), [selected])\n  let propsWeControl = {\n    ref: tabRef,\n    onKeyDown: handleKeyDown,\n    onFocus: activation === 'manual' ? handleFocus : handleSelection,\n    onClick: handleSelection,\n    id,\n    role: 'tab',\n    type: useResolveButtonType(props, internalTabRef),\n    'aria-controls': panels[myIndex]?.current?.id,\n    'aria-selected': selected,\n    tabIndex: selected ? 0 : -1,\n  }\n  let passThroughProps = props\n\n  return render({\n    props: { ...passThroughProps, ...propsWeControl },\n    slot,\n    defaultTag: DEFAULT_TAB_TAG,\n    name: 'Tabs.Tab',\n  })\n}\n\n// ---\n\nlet DEFAULT_PANELS_TAG = 'div' as const\ninterface PanelsRenderPropArg {\n  selectedIndex: number\n}\n\nfunction Panels<TTag extends ElementType = typeof DEFAULT_PANELS_TAG>(\n  props: Props<TTag, PanelsRenderPropArg>\n) {\n  let [{ selectedIndex }] = useTabsContext([Tab.name, Panels.name].join('.'))\n\n  let slot = useMemo(() => ({ selectedIndex }), [selectedIndex])\n\n  return render({\n    props,\n    slot,\n    defaultTag: DEFAULT_PANELS_TAG,\n    name: 'Tabs.Panels',\n  })\n}\n\n// ---\n\nlet DEFAULT_PANEL_TAG = 'div' as const\ninterface PanelRenderPropArg {\n  selected: boolean\n}\ntype PanelPropsWeControl = 'id' | 'role' | 'aria-labelledby' | 'tabIndex'\nlet PanelRenderFeatures = Features.RenderStrategy | Features.Static\n\nfunction Panel<TTag extends ElementType = typeof DEFAULT_PANEL_TAG>(\n  props: Props<TTag, PanelRenderPropArg, PanelPropsWeControl> &\n    PropsForFeatures<typeof PanelRenderFeatures>\n) {\n  let [{ selectedIndex, tabs, panels }, { dispatch }] = useTabsContext(\n    [Tab.name, Panel.name].join('.')\n  )\n\n  let id = `headlessui-tabs-panel-${useId()}`\n  let internalPanelRef = useRef<HTMLElement>(null)\n  let panelRef = useSyncRefs(internalPanelRef, element => {\n    if (!element) return\n    dispatch({ type: ActionTypes.ForceRerender })\n  })\n\n  useIsoMorphicEffect(() => {\n    dispatch({ type: ActionTypes.RegisterPanel, panel: internalPanelRef })\n    return () => dispatch({ type: ActionTypes.UnregisterPanel, panel: internalPanelRef })\n  }, [dispatch, internalPanelRef])\n\n  let myIndex = panels.indexOf(internalPanelRef)\n  let selected = myIndex === selectedIndex\n\n  let slot = useMemo(() => ({ selected }), [selected])\n  let propsWeControl = {\n    ref: panelRef,\n    id,\n    role: 'tabpanel',\n    'aria-labelledby': tabs[myIndex]?.current?.id,\n    tabIndex: selected ? 0 : -1,\n  }\n\n  let passThroughProps = props\n\n  return render({\n    props: { ...passThroughProps, ...propsWeControl },\n    slot,\n    defaultTag: DEFAULT_PANEL_TAG,\n    features: PanelRenderFeatures,\n    visible: selected,\n    name: 'Tabs.Panel',\n  })\n}\n\n// ---\n\nTab.Group = Tabs\nTab.List = List\nTab.Panels = Panels\nTab.Panel = Panel\n"]},"metadata":{},"sourceType":"module"}