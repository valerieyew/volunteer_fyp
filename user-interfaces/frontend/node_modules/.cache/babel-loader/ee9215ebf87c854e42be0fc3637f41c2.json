{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pc\\\\Desktop\\\\Repos\\\\fyp_backend\\\\user-interfaces\\\\frontend\\\\src\\\\accounts\\\\user\\\\UserNav.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport UserHeader from \"./UserHeader\";\nimport BrowseEvents from \"../../events/user/feeds/BrowseEvents\";\nimport EnrolledEvents from \"../../events/user/feeds/EnrolledEvents\";\nimport ProposedEvents from \"../../events/user/feeds/ProposedEvents\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UserNav = () => {\n  _s();\n\n  // Toggle for header sections\n  const [browseSelected, setBrowseSelected] = useState(true);\n  const [enrolledSelected, setEnrolledSelected] = useState(false);\n\n  const toggleBrowse = () => {\n    setBrowseSelected(true);\n    setEnrolledSelected(false);\n  };\n\n  const toggleEnrolled = () => {\n    setBrowseSelected(false);\n    setEnrolledSelected(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: [/*#__PURE__*/_jsxDEV(UserHeader, {\n      toggleBrowse: toggleBrowse,\n      toggleEnrolled: toggleEnrolled,\n      browseSelected: browseSelected,\n      enrolledSelected: enrolledSelected\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/home\",\n        children: /*#__PURE__*/_jsxDEV(BrowseEvents, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/enrolled\",\n        children: /*#__PURE__*/_jsxDEV(EnrolledEvents, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/proposed\",\n        children: /*#__PURE__*/_jsxDEV(ProposedEvents, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UserNav, \"EMCO9CPMl97geL9EBn1J9vO9j+w=\");\n\n_c = UserNav;\nexport default UserNav;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserNav\");","map":{"version":3,"sources":["C:/Users/pc/Desktop/Repos/fyp_backend/user-interfaces/frontend/src/accounts/user/UserNav.js"],"names":["React","useState","BrowserRouter","Router","Route","Switch","UserHeader","BrowseEvents","EnrolledEvents","ProposedEvents","UserNav","browseSelected","setBrowseSelected","enrolledSelected","setEnrolledSelected","toggleBrowse","toggleEnrolled"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,EAAyCC,MAAzC,QAAuD,kBAAvD;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,YAAP,MAAyB,sCAAzB;AACA,OAAOC,cAAP,MAA2B,wCAA3B;AACA,OAAOC,cAAP,MAA2B,wCAA3B;;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AAEpB;AACA,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCX,QAAQ,CAAC,IAAD,CAApD;AACA,QAAM,CAACY,gBAAD,EAAmBC,mBAAnB,IAA0Cb,QAAQ,CAAC,KAAD,CAAxD;;AAGA,QAAMc,YAAY,GAAG,MAAM;AACzBH,IAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACAE,IAAAA,mBAAmB,CAAC,KAAD,CAAnB;AACD,GAHD;;AAKA,QAAME,cAAc,GAAG,MAAM;AAC3BJ,IAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACAE,IAAAA,mBAAmB,CAAC,IAAD,CAAnB;AACD,GAHD;;AAKA,sBACE,QAAC,MAAD;AAAA,4BACE,QAAC,UAAD;AACE,MAAA,YAAY,EAAEC,YADhB;AAEE,MAAA,cAAc,EAAEC,cAFlB;AAGE,MAAA,cAAc,EAAEL,cAHlB;AAIE,MAAA,gBAAgB,EAAEE;AAJpB;AAAA;AAAA;AAAA;AAAA,YADF,eAQE,QAAC,MAAD;AAAA,8BACE,QAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAC,OAAlB;AAAA,+BACE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAC,WAAlB;AAAA,+BACE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAJF,eAOE,QAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAC,WAAlB;AAAA,+BACE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD,CAvCD;;GAAMH,O;;KAAAA,O;AAyCN,eAAeA,OAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport UserHeader from \"./UserHeader\";\r\nimport BrowseEvents from \"../../events/user/feeds/BrowseEvents\";\r\nimport EnrolledEvents from \"../../events/user/feeds/EnrolledEvents\";\r\nimport ProposedEvents from \"../../events/user/feeds/ProposedEvents\";\r\n\r\nconst UserNav = () => {\r\n\r\n  // Toggle for header sections\r\n  const [browseSelected, setBrowseSelected] = useState(true);\r\n  const [enrolledSelected, setEnrolledSelected] = useState(false);\r\n\r\n\r\n  const toggleBrowse = () => {\r\n    setBrowseSelected(true);\r\n    setEnrolledSelected(false);\r\n  };\r\n\r\n  const toggleEnrolled = () => {\r\n    setBrowseSelected(false);\r\n    setEnrolledSelected(true);\r\n  };\r\n\r\n  return (\r\n    <Router>\r\n      <UserHeader\r\n        toggleBrowse={toggleBrowse}\r\n        toggleEnrolled={toggleEnrolled}\r\n        browseSelected={browseSelected}\r\n        enrolledSelected={enrolledSelected}\r\n      />\r\n\r\n      <Switch>\r\n        <Route exact path=\"/home\">\r\n          <BrowseEvents />\r\n        </Route>\r\n        <Route exact path=\"/enrolled\">\r\n          <EnrolledEvents />\r\n        </Route> \r\n        <Route exact path=\"/proposed\">\r\n          <ProposedEvents />\r\n        </Route> \r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default UserNav;"]},"metadata":{},"sourceType":"module"}